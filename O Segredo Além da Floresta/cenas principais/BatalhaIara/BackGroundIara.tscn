[gd_scene load_steps=25 format=2]

[ext_resource path="res://cenas principais/TesteCachoeira.gd" type="Script" id=1]
[ext_resource path="res://Assets_exterior/Assets_Cenario_Iara/336x330.png" type="Texture" id=2]
[ext_resource path="res://Assets_exterior/Assets_Cenario_Iara/4568233-retro-games-mountains-8-bit.jpg" type="Texture" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://Assets_exterior/Assets_Cenario_Iara/raboIara.png" type="Texture" id=5]
[ext_resource path="res://Assets_exterior/Assets_Cenario_Iara/RockPack128x128.png" type="Texture" id=6]
[ext_resource path="res://Assets_exterior/Assets_Cenario_Iara/iara.png" type="Texture" id=7]
[ext_resource path="res://Assets_exterior/Cachoeira/Lagoa.jpg" type="Texture" id=8]
[ext_resource path="res://Assets_exterior/Assets_Cenario_Iara/PersonagemBatalha.png" type="Texture" id=9]

[sub_resource type="Shader" id=50]
code = "shader_type canvas_item;
uniform int OCTAVE = 6;
uniform float mulscale = 5.0;
uniform float height = 0.6;
uniform float tide = 0.1;
uniform float foamthickness = 0.1;
uniform float timescale = 1.0;
uniform float waterdeep = 0.3;
uniform vec4 WATER_COL : hint_color =  vec4(0.04, 0.38, 0.88, 1.0);
uniform vec4 WATER2_COL : hint_color =  vec4(0.04, 0.35, 0.78, 1.0);
uniform vec4 FOAM_COL : hint_color = vec4(0.8125, 0.9609, 0.9648, 1.0);


float rand(vec2 input){
	return fract(sin(dot(input,vec2(23.53,44.0)))*42350.45);
}

float perlin(vec2 input){
	vec2 i = floor(input);
	vec2 j = fract(input);
	vec2 coord = smoothstep(0.,1.,j);
	
	float a = rand(i);
	float b = rand(i+vec2(1.0,0.0));
	float c = rand(i+vec2(0.0,1.0));
	float d = rand(i+vec2(1.0,1.0));

	return mix(mix(a,b,coord.x),mix(c,d,coord.x),coord.y);
}

float fbm(vec2 input){
	float value = 0.0;
	float scale = 0.5;
	
	for(int i = 0; i < OCTAVE; i++){
		value += perlin(input)*scale;
		input*=2.0;
		scale*=0.5;
	}
	return value;
}

void fragment(){
	float newtime = TIME*timescale;
	float fbmval = fbm(vec2(UV.x*mulscale+0.2*sin(0.3*newtime)+0.15*newtime,-0.05*newtime+UV.y*mulscale+0.1*cos(0.68*newtime)));
	float fbmvalshadow = fbm(vec2(UV.x*mulscale+0.2*sin(-0.6*newtime + 25.0 * UV.y)+0.15*newtime+3.0,-0.05*newtime+UV.y*mulscale+0.13*cos(-0.68*newtime))-7.0+0.1*sin(0.43*newtime));
	float myheight = height+tide*sin(newtime+5.0*UV.x-8.0*UV.y);
	float shadowheight = height+tide*1.3*cos(newtime+2.0*UV.x-2.0*UV.y);
	float withinFoam = step(myheight, fbmval)*step(fbmval, myheight + foamthickness);
	float shadow = (1.0-withinFoam)*step(shadowheight, fbmvalshadow)*step(fbmvalshadow, shadowheight + foamthickness * 0.7);
	COLOR = withinFoam*FOAM_COL + shadow*WATER2_COL + ((1.0-withinFoam)*(1.0-shadow))*WATER_COL;
	//COLOR = vec4(1.0,1.0,1.0,fbmval);
}


"

[sub_resource type="ShaderMaterial" id=37]
shader = SubResource( 50 )
shader_param/OCTAVE = 2
shader_param/mulscale = 34.94
shader_param/height = 0.65
shader_param/tide = 0.098
shader_param/foamthickness = 0.089
shader_param/timescale = -0.981
shader_param/waterdeep = 4.049
shader_param/WATER_COL = Color( 0.04, 0.38, 0.88, 1 )
shader_param/WATER2_COL = Color( 0.04, 0.35, 0.78, 1 )
shader_param/FOAM_COL = Color( 0.8125, 0.9609, 0.9648, 1 )

[sub_resource type="TileSet" id=38]
0/name = "RockPack128x128.png 0"
0/texture = ExtResource( 6 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 3, 17, 12 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "RockPack128x128.png 1"
1/texture = ExtResource( 6 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 19, 5, 15, 12 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0
2/name = "RockPack128x128.png 2"
2/texture = ExtResource( 6 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 37, 4, 18, 14 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape_one_way = false
2/shape_one_way_margin = 0.0
2/shapes = [  ]
2/z_index = 0
5/name = "RockPack128x128.png 5"
5/texture = ExtResource( 6 )
5/tex_offset = Vector2( 0, 0 )
5/modulate = Color( 1, 1, 1, 1 )
5/region = Rect2( 1, 23, 22, 13 )
5/tile_mode = 0
5/occluder_offset = Vector2( 0, 0 )
5/navigation_offset = Vector2( 0, 0 )
5/shape_offset = Vector2( 0, 0 )
5/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
5/shape_one_way = false
5/shape_one_way_margin = 0.0
5/shapes = [  ]
5/z_index = 0
6/name = "RockPack128x128.png 6"
6/texture = ExtResource( 6 )
6/tex_offset = Vector2( 0, 0 )
6/modulate = Color( 1, 1, 1, 1 )
6/region = Rect2( 28, 23, 23, 15 )
6/tile_mode = 0
6/occluder_offset = Vector2( 0, 0 )
6/navigation_offset = Vector2( 0, 0 )
6/shape_offset = Vector2( 0, 0 )
6/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
6/shape_one_way = false
6/shape_one_way_margin = 0.0
6/shapes = [  ]
6/z_index = 0
7/name = "RockPack128x128.png 7"
7/texture = ExtResource( 6 )
7/tex_offset = Vector2( 0, 0 )
7/modulate = Color( 1, 1, 1, 1 )
7/region = Rect2( 54, 34, 26, 20 )
7/tile_mode = 0
7/occluder_offset = Vector2( 0, 0 )
7/navigation_offset = Vector2( 0, 0 )
7/shape_offset = Vector2( 0, 0 )
7/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
7/shape_one_way = false
7/shape_one_way_margin = 0.0
7/shapes = [  ]
7/z_index = 0
8/name = "RockPack128x128.png 8"
8/texture = ExtResource( 6 )
8/tex_offset = Vector2( 0, 0 )
8/modulate = Color( 1, 1, 1, 1 )
8/region = Rect2( 84, 36, 16, 14 )
8/tile_mode = 0
8/occluder_offset = Vector2( 0, 0 )
8/navigation_offset = Vector2( 0, 0 )
8/shape_offset = Vector2( 0, 0 )
8/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
8/shape_one_way = false
8/shape_one_way_margin = 0.0
8/shapes = [  ]
8/z_index = 0
9/name = "RockPack128x128.png 9"
9/texture = ExtResource( 6 )
9/tex_offset = Vector2( 0, 0 )
9/modulate = Color( 1, 1, 1, 1 )
9/region = Rect2( 101, 35, 28, 16 )
9/tile_mode = 0
9/occluder_offset = Vector2( 0, 0 )
9/navigation_offset = Vector2( 0, 0 )
9/shape_offset = Vector2( 0, 0 )
9/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
9/shape_one_way = false
9/shape_one_way_margin = 0.0
9/shapes = [  ]
9/z_index = 0
10/name = "RockPack128x128.png 10"
10/texture = ExtResource( 6 )
10/tex_offset = Vector2( 0, 0 )
10/modulate = Color( 1, 1, 1, 1 )
10/region = Rect2( 105, 89, 19, 11 )
10/tile_mode = 0
10/occluder_offset = Vector2( 0, 0 )
10/navigation_offset = Vector2( 0, 0 )
10/shape_offset = Vector2( 0, 0 )
10/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
10/shape_one_way = false
10/shape_one_way_margin = 0.0
10/shapes = [  ]
10/z_index = 0
11/name = "RockPack128x128.png 11"
11/texture = ExtResource( 6 )
11/tex_offset = Vector2( 0, 0 )
11/modulate = Color( 1, 1, 1, 1 )
11/region = Rect2( 108, 107, 20, 17 )
11/tile_mode = 0
11/occluder_offset = Vector2( 0, 0 )
11/navigation_offset = Vector2( 0, 0 )
11/shape_offset = Vector2( 0, 0 )
11/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
11/shape_one_way = false
11/shape_one_way_margin = 0.0
11/shapes = [  ]
11/z_index = 0
12/name = "RockPack128x128.png 12"
12/texture = ExtResource( 6 )
12/tex_offset = Vector2( 0, 0 )
12/modulate = Color( 1, 1, 1, 1 )
12/region = Rect2( 63, 63, 33, 20 )
12/tile_mode = 0
12/occluder_offset = Vector2( 0, 0 )
12/navigation_offset = Vector2( 0, 0 )
12/shape_offset = Vector2( 0, 0 )
12/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
12/shape_one_way = false
12/shape_one_way_margin = 0.0
12/shapes = [  ]
12/z_index = 0
13/name = "RockPack128x128.png 13"
13/texture = ExtResource( 6 )
13/tex_offset = Vector2( 0, 0 )
13/modulate = Color( 1, 1, 1, 1 )
13/region = Rect2( 99, 61, 25, 22 )
13/tile_mode = 0
13/occluder_offset = Vector2( 0, 0 )
13/navigation_offset = Vector2( 0, 0 )
13/shape_offset = Vector2( 0, 0 )
13/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
13/shape_one_way = false
13/shape_one_way_margin = 0.0
13/shapes = [  ]
13/z_index = 0
14/name = "RockPack128x128.png 14"
14/texture = ExtResource( 6 )
14/tex_offset = Vector2( 0, 0 )
14/modulate = Color( 1, 1, 1, 1 )
14/region = Rect2( 50, 91, 24, 30 )
14/tile_mode = 0
14/occluder_offset = Vector2( 0, 0 )
14/navigation_offset = Vector2( 0, 0 )
14/shape_offset = Vector2( 0, 0 )
14/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
14/shape_one_way = false
14/shape_one_way_margin = 0.0
14/shapes = [  ]
14/z_index = 0
15/name = "RockPack128x128.png 15"
15/texture = ExtResource( 6 )
15/tex_offset = Vector2( 0, 0 )
15/modulate = Color( 1, 1, 1, 1 )
15/region = Rect2( 75, 91, 27, 30 )
15/tile_mode = 0
15/occluder_offset = Vector2( 0, 0 )
15/navigation_offset = Vector2( 0, 0 )
15/shape_offset = Vector2( 0, 0 )
15/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
15/shape_one_way = false
15/shape_one_way_margin = 0.0
15/shapes = [  ]
15/z_index = 0
16/name = "RockPack128x128.png 16"
16/texture = ExtResource( 6 )
16/tex_offset = Vector2( 0, 0 )
16/modulate = Color( 1, 1, 1, 1 )
16/region = Rect2( 9, 83, 40, 25 )
16/tile_mode = 0
16/occluder_offset = Vector2( 0, 0 )
16/navigation_offset = Vector2( 0, 0 )
16/shape_offset = Vector2( 0, 0 )
16/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
16/shape_one_way = false
16/shape_one_way_margin = 0.0
16/shapes = [  ]
16/z_index = 0
17/name = "RockPack128x128.png 17"
17/texture = ExtResource( 6 )
17/tex_offset = Vector2( 0, 0 )
17/modulate = Color( 1, 1, 1, 1 )
17/region = Rect2( 4, 44, 48, 30 )
17/tile_mode = 0
17/occluder_offset = Vector2( 0, 0 )
17/navigation_offset = Vector2( 0, 0 )
17/shape_offset = Vector2( 0, 0 )
17/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
17/shape_one_way = false
17/shape_one_way_margin = 0.0
17/shapes = [  ]
17/z_index = 0
18/name = "RockPack128x128.png 18"
18/texture = ExtResource( 6 )
18/tex_offset = Vector2( 0, 0 )
18/modulate = Color( 1, 1, 1, 1 )
18/region = Rect2( 63, 0, 33, 24 )
18/tile_mode = 0
18/occluder_offset = Vector2( 0, 0 )
18/navigation_offset = Vector2( 0, 0 )
18/shape_offset = Vector2( 0, 0 )
18/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
18/shape_one_way = false
18/shape_one_way_margin = 0.0
18/shapes = [  ]
18/z_index = 0
19/name = "RockPack128x128.png 19"
19/texture = ExtResource( 6 )
19/tex_offset = Vector2( 0, 0 )
19/modulate = Color( 1, 1, 1, 1 )
19/region = Rect2( 97, 1, 29, 22 )
19/tile_mode = 0
19/occluder_offset = Vector2( 0, 0 )
19/navigation_offset = Vector2( 0, 0 )
19/shape_offset = Vector2( 0, 0 )
19/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
19/shape_one_way = false
19/shape_one_way_margin = 0.0
19/shapes = [  ]
19/z_index = 0

[sub_resource type="Shader" id=60]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/2d-waterfall

Feel free to improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform vec2 scale; // Used for sprite script. Don't edit this value in the inspector.
uniform float zoom; // Used for sprite script. Don't edit this value in the inspector.

uniform sampler2D refraction_map;
uniform sampler2D water_mask;

uniform vec2 gap_stretch = vec2(0.8, 0.05);
uniform vec2 refraction_stretch = vec2(2.0, 0.8);
uniform float refraction_strength : hint_range(0.0, 0.1) = 0.02;

uniform vec4 water_tint : hint_color = vec4(0.2, 0.6, 1.0, 0.1);
uniform vec4 water_highlight : hint_color = vec4(1.0, 1.0, 1.0, 0.3);
uniform float speed = 1.0;
uniform float flow_gaps : hint_range(0.0, 1.0) = 0.33;
uniform float highlight_width : hint_range(0.0, 0.3) = 0.02;

void fragment()
{
	// Get the two noise textures and make them move on the y axis. The gaps move twice as fast as the refraction, but you can tweak this by changing (speed * 0.5)
	vec2 refraction_offset = texture(refraction_map, vec2(UV.x, UV.y + -TIME * speed * 0.5) * scale * refraction_stretch).xy;
	vec2 gap_mask = texture(water_mask, vec2(UV.x, UV.y + -TIME * speed) * scale * gap_stretch).xy;
	
	// Set values between -0.5 and 0.5 (instead of 0 and 1). Otherwise the reflection will move whith increased refraction_strength
	refraction_offset -= 0.5; 
	
	// Get the screen texture and distort it
	vec4 refraction = texture(SCREEN_TEXTURE, SCREEN_UV - refraction_offset * refraction_strength * zoom);
	
	
	// Create holes and apply colors and textures //
	
	vec4 color = vec4(1.0);
	
	// Define what values will be the water highlight color (the gap border)
	float inner_edge = flow_gaps + highlight_width;
	
	// See if the pixel is within the edges range and use the water colors alpha to blend between showing color or refraction texture.
	if (gap_mask.x < inner_edge)
	{
		color.rgb = mix(refraction.rgb, water_highlight.rgb, water_highlight.a);
	}
	else
	{
		color.rgb = mix(refraction.rgb, water_tint.rgb, water_tint.a);
	}
	
	// If the value is below the gap threshhold make it transparent (a gap)
	if (gap_mask.x < flow_gaps)
	{
		color.a = 0.0;
	}
	
	
	// Crate Edge Shape //
	
	// Set the shape for the top and bottom edges. Use water_mask as shape but with other values to flatten it out horizontally. 
	vec2 water_edge = texture(water_mask, vec2(UV.x, UV.y + -TIME * 0.1) * scale * vec2(0.15, 0.6)).xy;
	water_edge -= 0.5;
	
	// Use the same mask as for the gaps for left and right edge.
	vec2 vertical_edge_mask = gap_mask - 0.5;
	
	// Apply the new masks to the edges. This will make the wobble effect.
	color.a = mix(0.0, color.a, step(UV.x + vertical_edge_mask.x * 0.2, 0.92)); // Right edge
	color.a = mix(color.a, 0.0, step(UV.x - vertical_edge_mask.x * 0.2, 0.08)); // Left edge
	
	color.a = mix(0.0, color.a, step(UV.y + water_edge.y * 0.1, 0.95));  //Bottom edge
	color.a = mix(color.a, 0.0, step(UV.y - water_edge.y * 0.05, 0.05)); //Top edge
	
	COLOR = color;
}"

[sub_resource type="OpenSimplexNoise" id=42]

[sub_resource type="NoiseTexture" id=61]
width = 2187
height = 1144
seamless = true
noise = SubResource( 42 )
noise_offset = Vector2( 0.438, 0.213 )

[sub_resource type="OpenSimplexNoise" id=43]

[sub_resource type="NoiseTexture" id=62]
width = 607
height = 570
seamless = true
noise = SubResource( 43 )

[sub_resource type="ShaderMaterial" id=44]
shader = SubResource( 60 )
shader_param/scale = Vector2( 1.14, 1 )
shader_param/zoom = 3.7755
shader_param/gap_stretch = Vector2( 1.336, 0.364 )
shader_param/refraction_stretch = Vector2( -0.622, -0.645 )
shader_param/refraction_strength = 0.022
shader_param/water_tint = Color( 0.364706, 0.741176, 1, 0.792157 )
shader_param/water_highlight = Color( 1, 1, 1, 1 )
shader_param/speed = 2.31
shader_param/flow_gaps = 0.23
shader_param/highlight_width = 0.144
shader_param/refraction_map = SubResource( 61 )
shader_param/water_mask = SubResource( 62 )

[sub_resource type="Shader" id=56]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.a
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=41]
shader = SubResource( 56 )
shader_param/speed = 1.791
shader_param/minStrength = 0.344
shader_param/maxStrength = 0.01
shader_param/strengthScale = 100.0
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = 1.0
shader_param/heightOffset = 0.238
shader_param/offset = 0.0

[sub_resource type="Shader" id=58]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.a
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=59]
shader = SubResource( 58 )
shader_param/speed = 3.307
shader_param/minStrength = 0.067
shader_param/maxStrength = 0.1
shader_param/strengthScale = 100.0
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = 0.169
shader_param/heightOffset = 0.535
shader_param/offset = 0.0

[sub_resource type="Shader" id=57]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=39]
shader = SubResource( 57 )
shader_param/angle = 0.958
shader_param/position = 0.318
shader_param/spread = 0.148
shader_param/cutoff = -0.042
shader_param/falloff = 0.125
shader_param/edge_fade = 0.09
shader_param/speed = 1.16
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.3
shader_param/color = Color( 0.870588, 1, 0.427451, 0.376471 )
shader_param/hdr = false
shader_param/seed = 5.266

[node name="GuitarHero" type="Node2D"]

[node name="Lagoa" type="Sprite" parent="."]
material = SubResource( 37 )
position = Vector2( 512.179, 388 )
scale = Vector2( 2.00711, 1.08333 )
texture = ExtResource( 8 )

[node name="Fundo" type="Sprite" parent="."]
position = Vector2( 514, 41 )
scale = Vector2( 0.527865, 0.255556 )
texture = ExtResource( 3 )

[node name="Pedras" type="Node2D" parent="."]
position = Vector2( 303, 64 )

[node name="PedraIara" type="TileMap" parent="Pedras"]
position = Vector2( -1, 1 )
scale = Vector2( 3, 3 )
tile_set = SubResource( 38 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( -65527, 17, 0, -65526, 16, 0, -65525, 18, 0, -65524, 536870928, 0, -65523, 536870927, 0, -65522, 536870928, 0, 9, 19, 0, 10, 18, 0, 11, 17, 0, 12, 536870930, 0, 13, 16, 0, 65544, 14, 0, 65545, 13, 0, 65546, 15, 0, 65547, 12, 0, 65549, 15, 0, 65550, 13, 0, 131081, 13, 0, 131083, 19, 0, 131084, 18, 0, 131085, 16, 0, 131086, 15, 0, 196621, 6, 0, 262152, 14, 0, 262153, 536870929, 0, 262155, 15, 0 )

[node name="Pedra fundo" type="TileMap" parent="Pedras"]
position = Vector2( -1, 1 )
scale = Vector2( 2, 2 )
tile_set = SubResource( 38 )
cell_size = Vector2( 8, 8 )
format = 1
tile_data = PoolIntArray( 720914, 18, 0 )

[node name="Pedra fundo 2" type="TileMap" parent="Pedras"]
position = Vector2( -1, 1 )
scale = Vector2( 1.5, 1.5 )
tile_set = SubResource( 38 )
cell_size = Vector2( 8, 8 )
format = 1
tile_data = PoolIntArray( 786447, 19, 0 )

[node name="PedraFundo3" type="TileMap" parent="Pedras"]
position = Vector2( -304, -63 )
scale = Vector2( 5, 5 )
tile_set = SubResource( 38 )
cell_size = Vector2( 8, 8 )
format = 1
tile_data = PoolIntArray( 589847, 14, 0 )

[node name="SombraPedraCachoeira" type="Polygon2D" parent="."]
position = Vector2( 926, 226 )
scale = Vector2( 4.82927, 6.25001 )
color = Color( 0, 0, 0, 0.313726 )
offset = Vector2( -55, -84 )
polygon = PoolVector2Array( 18.1414, 76.96, 15.6566, 80.16, 15.2424, 81.92, 16, 84, 50.8544, 84, 56.4495, 84.64, 56.2424, 88.16, 57.6919, 86.24, 58.106, 85.44, 61.4192, 84.64, 63.904, 82.56, 66.3889, 82.56, 66.1818, 76.16, 65.9747, 71.84, 67.6313, 70.56, 67.8384, 65.76, 65.9747, 63.36, 62.2475, 53.12, 30.1515, 52.96, 26.8384, 55.2, 22.904, 59.52, 24.5606, 65.12, 21.0404, 70.88, 18.3485, 75.2 )

[node name="Cachoeira" type="Node2D" parent="."]
position = Vector2( 900, 235 )
rotation = -1.5708
scale = Vector2( 0.392086, 0.392086 )

[node name="AguaCachoeira" type="Sprite" parent="Cachoeira"]
material = SubResource( 44 )
position = Vector2( 371.092, -91.7769 )
rotation = 1.5708
scale = Vector2( 6.2155, 12.8719 )
texture = ExtResource( 4 )
script = ExtResource( 1 )

[node name="ParticulaCachoeira" type="CPUParticles2D" parent="Cachoeira"]
position = Vector2( 18.616, -85.099 )
scale = Vector2( 0.334097, 0.932522 )
amount = 30
speed_scale = 1.74
texture = ExtResource( 2 )

[node name="CaudaIara" type="Sprite" parent="."]
material = SubResource( 41 )
position = Vector2( 842, 236 )
scale = Vector2( 0.194325, 0.194325 )
texture = ExtResource( 5 )

[node name="SombraIara" type="Polygon2D" parent="."]
position = Vector2( 815.077, 268.25 )
scale = Vector2( 1.27692, 2.75 )
color = Color( 0, 0, 0, 0.313726 )
offset = Vector2( -55, -84 )
polygon = PoolVector2Array( 38.494, 83.9091, 22.0482, 86.8182, 18.9157, 87.1818, 19.6988, 89, 22.0482, 89.7273, 27.5302, 89.7273, 29.8795, 88.6364, 67.7327, 85.5686, 70.6024, 85.3636, 72.9518, 84.2727, 75.3012, 83.5455, 78.4338, 82.8182, 78.4338, 80.6364, 72.9518, 80.6364 )

[node name="Iara" type="Sprite" parent="."]
position = Vector2( 839, 221 )
scale = Vector2( 0.300287, 0.300287 )
texture = ExtResource( 7 )

[node name="SombraIara2" type="Polygon2D" parent="."]
position = Vector2( 811.688, 258.384 )
scale = Vector2( 1.16549, 4.57375 )
color = Color( 0, 0, 0, 0.313726 )
offset = Vector2( -55, -84 )
polygon = PoolVector2Array( 74.1437, 83.4787, 61.2736, 85.4464, 39.8233, 85.8837, 29.5272, 87.6328, 21.8051, 88.5074, 19.6988, 89, 22.0482, 89.7273, 27.5302, 89.7273, 29.8795, 88.6364, 62.9896, 86.5396, 75.0017, 84.7905, 79.2917, 83.916, 79.2917, 83.6973, 81.0078, 82.1668, 77.5757, 82.8228 )

[node name="Sombras" type="Node2D" parent="."]

[node name="SombraPedra" type="Polygon2D" parent="Sombras"]
position = Vector2( 523, 244 )
color = Color( 0, 0, 0, 0.313726 )
offset = Vector2( -55, -84 )
polygon = PoolVector2Array( 25, 81, 16, 81, 15, 82, 16, 84, 55, 84, 56, 82, 56, 80 )

[node name="SombraPedra2" type="Polygon2D" parent="Sombras"]
position = Vector2( 630, 290 )
color = Color( 0, 0, 0, 0.313726 )
offset = Vector2( -55, -84 )
polygon = PoolVector2Array( 25, 81, 16, 81, 15, 82, 16, 84, 77, 85, 79, 84, 80, 83, 79, 81 )

[node name="SombraPedra3" type="Polygon2D" parent="Sombras"]
position = Vector2( 828.308, 349.75 )
scale = Vector2( 3.50769, 2.25 )
color = Color( 0, 0, 0, 0.313726 )
offset = Vector2( -55, -84 )
polygon = PoolVector2Array( 25, 81, 16, 81, 15, 82, 16, 84, 77, 85, 79, 84, 80, 83, 79, 81 )

[node name="PersonagemBatalha" type="Sprite" parent="."]
material = SubResource( 59 )
position = Vector2( 949, 434 )
scale = Vector2( 0.423351, 0.423351 )
texture = ExtResource( 9 )

[node name="GodRays" type="ColorRect" parent="."]
material = SubResource( 39 )
margin_left = 16.0
margin_top = -478.0
margin_right = 1108.0
margin_bottom = 684.0
rect_rotation = 4.67835

[connection signal="item_rect_changed" from="Cachoeira/AguaCachoeira" to="Cachoeira/AguaCachoeira" method="_on_Sprite_item_rect_changed"]
